/**
 * Error Codes Constants
 * 
 * Centralized error codes for consistent error handling across the application
 */

const ERROR_CODES = {
  // Resource Not Found Errors
  NOT_FOUND: {
    USER: 'USER_NOT_FOUND',
    BOOKING: 'BOOKING_NOT_FOUND',
    SEAT: 'SEAT_NOT_FOUND',
    LIBRARY: 'LIBRARY_NOT_FOUND',
    INVOICE: 'INVOICE_NOT_FOUND',
    PAYMENT: 'PAYMENT_NOT_FOUND',
    RESOURCE: 'RESOURCE_NOT_FOUND'
  },
  
  // Validation Errors
  VALIDATION: {
    INVALID_INPUT: 'INVALID_INPUT',
    MISSING_REQUIRED_FIELD: 'MISSING_REQUIRED_FIELD',
    INVALID_RANGE: 'INVALID_RANGE',
    INVALID_EMAIL: 'INVALID_EMAIL',
    INVALID_DATE: 'INVALID_DATE',
    INVALID_TIME: 'INVALID_TIME',
    INVALID_UUID: 'INVALID_UUID',
    INVALID_ENUM_VALUE: 'INVALID_ENUM_VALUE',
    FIELD_TOO_SHORT: 'FIELD_TOO_SHORT',
    FIELD_TOO_LONG: 'FIELD_TOO_LONG',
    INVALID_PAGE: 'INVALID_PAGE',
    INVALID_LIMIT: 'INVALID_LIMIT'
  },
  
  // Conflict Errors
  CONFLICT: {
    ALREADY_EXISTS: 'RESOURCE_ALREADY_EXISTS',
    EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',
    SEAT_ALREADY_EXISTS: 'SEAT_ALREADY_EXISTS',
    HAS_ACTIVE_BOOKINGS: 'HAS_ACTIVE_BOOKINGS',
    DUPLICATE_ENTRY: 'DUPLICATE_ENTRY'
  },
  
  // Authorization Errors
  AUTH: {
    UNAUTHORIZED: 'UNAUTHORIZED',
    FORBIDDEN: 'FORBIDDEN',
    TOKEN_REQUIRED: 'TOKEN_REQUIRED',
    INVALID_TOKEN: 'INVALID_TOKEN',
    TOKEN_EXPIRED: 'TOKEN_EXPIRED',
    INSUFFICIENT_PERMISSIONS: 'INSUFFICIENT_PERMISSIONS'
  },
  
  // Business Logic Errors
  BUSINESS: {
    INSUFFICIENT_BALANCE: 'INSUFFICIENT_BALANCE',
    SEAT_NOT_AVAILABLE: 'SEAT_NOT_AVAILABLE',
    BOOKING_CONFLICT: 'BOOKING_CONFLICT',
    PAYMENT_FAILED: 'PAYMENT_FAILED',
    OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED'
  },
  
  // System Errors
  SYSTEM: {
    INTERNAL_ERROR: 'INTERNAL_ERROR',
    DATABASE_ERROR: 'DATABASE_ERROR',
    EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',
    SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE'
  }
};

module.exports = ERROR_CODES;
